#########################################################################
# Estrutura da palavra de horizontal
#
# [0][1][2] [3] [4] [5] [6][7][8] [9]
#
# Legenda:
#
# 0: flag para o uso da entrada P1 (1 = usa, 0 = nao usa)
# 1: flag para o uso da saida P1
# 2: flag para o uso da saida P2
#
# 3: sinais de controle
#
# 4: $ sinais de operacao para ULA
#    0: incrementar
#    1: incrementar (comp 2)
#    2: somar
#    3: somar (comp 2)
#    4: subtrair (comp 2)
#    5: multiplicar (comp 2)
#    6: dividir (comp 2)
#
# 5: @ sinais de operacao para RAM
#    0: endereco valido
#    1: escrever
#    2: ler
#
# Condicoes do JUMP
# 6: I jump incondicional
# 7: Z jump zero
# 8: N jump negativo
# 9: P jump positivo
#
#10: & flag para a leitura do endereco da operacao no IR
#
#11: % endereco da microinstrucao em caso de jump
#
#
# PADRAO:
# FLAGS				SINAIS DE CONTROLE
# 0 0 0   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   $   @   I Z N P   &   %
#
#########################################################################

################################################################################################
####################################### CICLO DE BUSCA #########################################
################################################################################################
#########0 0 0 0 0 0 0 0 0##1 1 1 1 1 1 1 1 1 1##2 2 2 2 2 2 2 2 2 2##3#########################
#########1 2 3 4 5 6 7 8 9##0 1 2 3 4 5 6 7 8 9##0 1 2 3 4 5 6 7 8 9##0#########################
 0 0 0   0 0 0 0 0 1 0 0 0  0 0 0 0 0 0 0 1 0 0  0 0 0 0 0 0 0 0 0 0  0   0   0   0 0 0 0  0   0
 0 0 0   1 0 1 0 0 0 0 0 1  0 0 0 0 0 0 0 1 0 0  0 0 0 0 0 0 0 0 0 0  0   2   1   0 0 0 0  0   0
 0 0 0   0 1 0 0 1 0 0 0 0  0 1 0 0 0 0 0 0 1 0  0 0 0 0 0 0 0 0 0 0  0   0   0   0 0 0 0  0   0
 0 0 0   0 0 0 0 0 0 0 1 0  0 0 0 0 1 0 0 0 0 0  0 0 0 0 0 0 0 0 0 0  0   0   0   0 0 0 0  0   0

################################################################################################
##################################### CICLO DE EXECUCAO ########################################
################################################################################################
#########0 0 0 0 0 0 0 0 0##1 1 1 1 1 1 1 1 1 1##2 2 2 2 2 2 2 2 2 2##3#########################
#########1 2 3 4 5 6 7 8 9##0 1 2 3 4 5 6 7 8 9##0 1 2 3 4 5 6 7 8 9##0#########################
 0 0 0   0 0 0 0 0 0 0 0 0  0 0 0 0 0 0 0 0 0 0  0 0 0 0 0 0 0 0 0 0  0   0   0   1 0 0 0  1   0

#       0 0 0 0 0 0 0 0 0  1 1 1 1 1 1 1 1 1 1  2 2 2 2 2 2 2 2 2 2  3
#       1 2 3 4 5 6 7 8 9  0 1 2 3 4 5 6 7 8 9  0 1 2 3 4 5 6 7 8 9  0

$ OPCODE  0  (MOV REG,CONST)
 1 0 0   0 0 0 0 0 0 0 0 0  0 0 0 0 0 0 1 0 0 0  0 0 0 0 0 0 0 0 0 0  0   0   0   1 0 0 0  0   0




















